<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="69674" started-at="2020-02-23T15:36:11Z" finished-at="2020-02-23T15:37:21Z">
    <groups>
    </groups>
    <test name="Registration Browser Chrome" duration-ms="25447" started-at="2020-02-23T15:36:11Z" finished-at="2020-02-23T15:36:36Z">
      <class name="automationPracticeTests.RegistrationTests">
        <test-method status="PASS" signature="navigate(java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@2b552920]" name="navigate" is-config="true" duration-ms="14444" started-at="2020-02-23T17:36:11Z" finished-at="2020-02-23T17:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:automationPracticeTests.RegistrationTests@2b552920]" name="methodLevelSetup" is-config="true" duration-ms="39" started-at="2020-02-23T17:36:25Z" finished-at="2020-02-23T17:36:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="validateNewAccount(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@2b552920]" name="validateNewAccount" duration-ms="9823" started-at="2020-02-23T17:36:26Z" data-provider="accountInformation" finished-at="2020-02-23T17:36:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lastname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Company]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Qwerty, 123]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[zxcvb]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Colorado]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[12345123123]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[12345123123]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[hf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNewAccount -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:automationPracticeTests.RegistrationTests@2b552920]" name="teardown" is-config="true" duration-ms="1090" started-at="2020-02-23T17:36:35Z" finished-at="2020-02-23T17:36:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNewAccount status=SUCCESS method=RegistrationTests.validateNewAccount(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@2b552920] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- automationPracticeTests.RegistrationTests -->
    </test> <!-- Registration Browser Chrome -->
    <test name="registration tests with firefox" duration-ms="26613" started-at="2020-02-23T15:36:37Z" finished-at="2020-02-23T15:37:04Z">
      <class name="automationPracticeTests.RegistrationTests">
        <test-method status="PASS" signature="navigate(java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@a7e666]" name="navigate" is-config="true" duration-ms="16002" started-at="2020-02-23T17:36:37Z" finished-at="2020-02-23T17:36:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:automationPracticeTests.RegistrationTests@a7e666]" name="methodLevelSetup" is-config="true" duration-ms="1" started-at="2020-02-23T17:36:53Z" finished-at="2020-02-23T17:36:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="validateNewAccount(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@a7e666]" name="validateNewAccount" duration-ms="9411" started-at="2020-02-23T17:36:53Z" data-provider="accountInformation" finished-at="2020-02-23T17:37:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lastname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Company]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Qwerty, 123]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[zxcvb]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Colorado]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Qwerty]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[12345123123]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[12345123123]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[hf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNewAccount -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:automationPracticeTests.RegistrationTests@a7e666]" name="teardown" is-config="true" duration-ms="1195" started-at="2020-02-23T17:37:03Z" finished-at="2020-02-23T17:37:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNewAccount status=SUCCESS method=RegistrationTests.validateNewAccount(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:automationPracticeTests.RegistrationTests@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- automationPracticeTests.RegistrationTests -->
    </test> <!-- registration tests with firefox -->
    <test name="login tests with chrome" duration-ms="16674" started-at="2020-02-23T15:37:04Z" finished-at="2020-02-23T15:37:21Z">
      <class name="automationPracticeTests.LoginTests">
        <test-method status="PASS" signature="navigate(java.lang.String)[pri:0, instance:automationPracticeTests.LoginTests@6c49835d]" name="navigate" is-config="true" duration-ms="12596" started-at="2020-02-23T17:37:04Z" finished-at="2020-02-23T17:37:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:automationPracticeTests.LoginTests@6c49835d]" name="methodLevelSetup" is-config="true" duration-ms="1" started-at="2020-02-23T17:37:16Z" finished-at="2020-02-23T17:37:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="validateValidLogin()[pri:0, instance:automationPracticeTests.LoginTests@6c49835d]" name="validateValidLogin" duration-ms="3199" started-at="2020-02-23T17:37:16Z" finished-at="2020-02-23T17:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateValidLogin -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:automationPracticeTests.LoginTests@6c49835d]" name="teardown" is-config="true" duration-ms="872" started-at="2020-02-23T17:37:20Z" finished-at="2020-02-23T17:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateValidLogin status=SUCCESS method=LoginTests.validateValidLogin()[pri:0, instance:automationPracticeTests.LoginTests@6c49835d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- automationPracticeTests.LoginTests -->
    </test> <!-- login tests with chrome -->
    <test name="checkout tests with chrome" duration-ms="10" started-at="2020-02-23T15:37:21Z" finished-at="2020-02-23T15:37:21Z">
      <class name="automationPracticeTests.CheckOutTests">
        <test-method status="SKIP" signature="validateCheckoutProcess(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:automationPracticeTests.CheckOutTests@76707e36]" name="validateCheckoutProcess" duration-ms="0" started-at="2020-02-23T17:37:21Z" data-provider="checkOut" finished-at="2020-02-23T17:37:21Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.NoClassDefFoundError: utilis/ExcelLib]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.NoClassDefFoundError: utilis/ExcelLib
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoClassDefFoundError: utilis/ExcelLib
	at automationPracticeTests.CheckOutTests.checkOut(CheckOutTests.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 16 more
Caused by: java.lang.ClassNotFoundException: utilis.ExcelLib
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 23 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckoutProcess -->
      </class> <!-- automationPracticeTests.CheckOutTests -->
    </test> <!-- checkout tests with chrome -->
  </suite> <!-- Suite -->
</testng-results>
